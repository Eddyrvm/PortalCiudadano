@model PortalCiudadano.Models.PortalGestion.SolicitudGestion

@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm("Edit", "SolicitudGestions", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="card shadow-lg">
        <div class="card-header">
            <h5 class="card-title">Editar Solicitud</h5>
        </div>
        <div class="card-body">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.SolicitudId)
            @Html.HiddenFor(model => model.Foto1)
            @Html.HiddenFor(model => model.Foto2)
            @Html.HiddenFor(model => model.QuienRegistraGestion)
            @Html.HiddenFor(model => model.DireccionFuncionario)

            <div class="row">
                <!-- Columna izquierda: campos de texto y demás inputs -->
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FechaSolicitud, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.FechaSolicitud, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FechaSolicitud, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SolicitudUsuario, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.SolicitudUsuario, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SolicitudUsuario, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.observaciones, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.observaciones, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.observaciones, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UsuarioSolicitaId, "UsuarioSolicitaId", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("UsuarioSolicitaId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UsuarioSolicitaId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Columna derecha: imagenes y file inputs -->
                <div class="col-md-6">
                    <div class="row mb-3">
                        <div class="col-4 text-center">
                            <strong>Foto Actual 1:</strong> <br>
                            @if (!string.IsNullOrEmpty(Model.Foto1))
                            {
                                <img src="@Url.Content(Model.Foto1)" alt="Imagen" class="img-thumbnail modal-img" data-bs-toggle="modal" data-bs-target="#imageModal" data-img="@Url.Content(Model.Foto1)" style="max-width: 100px; height: auto; border-radius: 10%; object-fit: cover; cursor: pointer;" />
                            }
                        </div>
                        <div class="col-8">
                            <label for="FotoFile1" class="form-label">@Html.DisplayNameFor(model => model.FotoFile1)</label>
                            @Html.TextBoxFor(model => model.FotoFile1, new { @class = "form-control", type = "file", id = "FotoFile1" })
                            @Html.ValidationMessageFor(model => model.FotoFile1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-4 text-center">
                            <strong>Foto Actual 2:</strong> <br>
                            @if (!string.IsNullOrEmpty(Model.Foto2))
                            {
                                <img src="@Url.Content(Model.Foto2)" alt="Imagen" class="img-thumbnail modal-img" data-bs-toggle="modal" data-bs-target="#imageModal" data-img="@Url.Content(Model.Foto2)" style="max-width: 100px; height: auto; border-radius: 10%; object-fit: cover; cursor: pointer;" />
                            }
                        </div>
                        <div class="col-8">
                            <label for="FotoFile12" class="form-label">@Html.DisplayNameFor(model => model.FotoFile12)</label>
                            @Html.TextBoxFor(model => model.FotoFile12, new { @class = "form-control", type = "file", id = "FotoFile12" })
                            @Html.ValidationMessageFor(model => model.FotoFile12, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
                <div class="form-group mt-3">
                    <input type="submit" value="Save" class="btn btn-default" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-link" })
                </div>
            </div>
        </div>
    </div>

}
<!-- Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-body text-center p-0">
                <img src="" id="modalImage" class="img-fluid rounded" alt="Imagen completa" style="max-width: 90vw; max-height: 90vh; object-fit: contain;" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary close-modal" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".modal-img").forEach(img => {
                img.addEventListener("click", function () {
                    const imgSrc = this.getAttribute("data-img");
                    document.getElementById("modalImage").src = imgSrc;
                });
            });
            $(".close-modal").on("click", function () {
                $("#imageModal").modal("hide");
            });
        });
    </script>
}

