@model PortalCiudadano.Models.User

@{
    ViewBag.Title = "Create";
}

<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

@using (Html.BeginForm("Create", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <br />
        <h6>
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#6f42c1" class="bi bi-info-circle-fill" viewBox="0 0 16 16" style="margin-bottom: 3px;">
                <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2" />
            </svg> Para inciar el registro debes digitar la cédula o RUC y presionar el boton "Cargar datos del solicitante"
        </h6>

        <div class="form-group">
            <input type="text" id="Identificador" class="form-control d-inline-flex mb-1" placeholder="Ingrese la cédula o RUC" />
            <button type="button" id="BuscarPersonaBtn" class="btn btn-warning mb-1">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-check" viewBox="0 0 16 16" style="margin-bottom: 5px;">
                    <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7m1.679-4.493-1.335 2.226a.75.75 0 0 1-1.174.144l-.774-.773a.5.5 0 0 1 .708-.708l.547.548 1.17-1.951a.5.5 0 1 1 .858.514M11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0M8 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4" />
                    <path d="M8.256 14a4.5 4.5 0 0 1-.229-1.004H3c.001-.246.154-.986.832-1.664C4.484 10.68 5.711 10 8 10q.39 0 .74.025c.226-.341.496-.65.804-.918Q8.844 9.002 8 9c-5 0-6 3-6 4s1 1 1 1z" />
                </svg> Cargar datos del solicitante
            </button>
            <!-- Spinner de tipo botón -->
            <button id="SpinnerButton" class="btn btn-primary d-none mb-1" type="button" disabled>
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                <span class="visually-hidden">Loading...</span>
            </button>
        </div>


        <input type="hidden" id="PersonaId" name="PersonaId" />

        <div id="PersonaInfo" class="mt-3 col-7" style="display:none;">
            <p class="mb-1 alert alert-success">
                <strong>Nombre:</strong> <span id="NombrePersona"></span>--
                <strong>Cédula:</strong> <span id="IdentificadorPersona"></span>
            </p> <!-- Mostrar el Identificador -->
        </div>


        @*<h4>
                <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" fill="#6f42c1" class="bi bi-person-vcard" viewBox="0 0 16 16" style="margin-bottom: 3px;">
                    <path d="M5 8a2 2 0 1 0 0-4 2 2 0 0 0 0 4m4-2.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5M9 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4A.5.5 0 0 1 9 8m1 2.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5" />
                    <path d="M2 2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2zM1 4a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H8.96q.04-.245.04-.5C9 10.567 7.21 9 5 9c-2.086 0-3.8 1.398-3.984 3.181A1 1 0 0 1 1 12z" />
                </svg> Registro de usuarios del sistema
            </h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <!-- Card de Datos Personales -->
        <div class="col-12 col-md-6">
            <br />
            <div class="card shadow">
                <div class="card-body">
                    <fieldset>
                        <legend>
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-file-earmark-person" viewBox="0 0 16 16" style="margin-bottom: 4px;">
                                <path d="M11 8a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
                                <path d="M14 14V4.5L9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2M9.5 3A1.5 1.5 0 0 0 11 4.5h2v9.255S12 12 8 12s-5 1.755-5 1.755V2a1 1 0 0 1 1-1h5.5z" />
                            </svg> Datos Personales
                        </legend>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Cedula, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Cedula, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Nombres, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Nombres, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombres, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Apellidos, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Apellidos, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Apellidos, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            <label for="FotoFile" class="form-label">@Html.DisplayNameFor(model => model.FotoFile)</label>
                            @Html.TextBoxFor(model => model.FotoFile, new { @class = "form-control", type = "file", id = "FotoFile" })
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>
        <!-- Card de Credenciales -->
        <div class="col-12 col-md-6">
            <br />
            <div class="card shadow">
                <div class="card-body">
                    <fieldset>
                        <legend>
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#6f42c1" class="bi bi-file-earmark-lock2" viewBox="0 0 16 16" style="margin-bottom: 4px;">
                                <path d="M10 7v1.076c.54.166 1 .597 1 1.224v2.4c0 .816-.781 1.3-1.5 1.3h-3c-.719 0-1.5-.484-1.5-1.3V9.3c0-.627.46-1.058 1-1.224V7a2 2 0 1 1 4 0M7 7v1h2V7a1 1 0 0 0-2 0" />
                                <path d="M14 14V4.5L9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2M9.5 3A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h5.5z" />
                            </svg> Credenciales
                        </legend>

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>
    </div>

        <br />
        <div class="form-group">
            <div class="text-center">
                <a class="btn btn-primary" title="Volver al formulario" href="@Url.Action("Index", "Users")">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-skip-backward-fill" viewBox="0 0 16 16">
                        <path d="M.5 3.5A.5.5 0 0 0 0 4v8a.5.5 0 0 0 1 0V8.753l6.267 3.636c.54.313 1.233-.066 1.233-.697v-2.94l6.267 3.636c.54.314 1.233-.065 1.233-.696V4.308c0-.63-.693-1.01-1.233-.696L8.5 7.248v-2.94c0-.63-.692-1.01-1.233-.696L1 7.248V4a.5.5 0 0 0-.5-.5" />
                    </svg> Volver a la lista
                </a>
                <button type="submit" class="btn btn-success">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear-wide-connected" viewBox="0 0 16 16">
                        <path d="M7.068.727c.243-.97 1.62-.97 1.864 0l.071.286a.96.96 0 0 0 1.622.434l.205-.211c.695-.719 1.888-.03 1.613.931l-.08.284a.96.96 0 0 0 1.187 1.187l.283-.081c.96-.275 1.65.918.931 1.613l-.211.205a.96.96 0 0 0 .434 1.622l.286.071c.97.243.97 1.62 0 1.864l-.286.071a.96.96 0 0 0-.434 1.622l.211.205c.719.695.03 1.888-.931 1.613l-.284-.08a.96.96 0 0 0-1.187 1.187l.081.283c.275.96-.918 1.65-1.613.931l-.205-.211a.96.96 0 0 0-1.622.434l-.071.286c-.243.97-1.62.97-1.864 0l-.071-.286a.96.96 0 0 0-1.622-.434l-.205.211c-.695.719-1.888.03-1.613-.931l.08-.284a.96.96 0 0 0-1.187-1.187l-.283.081c-.96.275-1.65-.918-.931-1.613l.211-.205a.96.96 0 0 0-.434-1.622l-.286-.071c-.97-.243-.97-1.62 0-1.864l.286-.071a.96.96 0 0 0 .434-1.622l-.211-.205c-.719-.695-.03-1.888.931-1.613l.284.08a.96.96 0 0 0 1.187-1.187l-.081-.283c-.275-.96.918-1.65 1.613-.931l.205.211a.96.96 0 0 0 1.622-.434l.071-.286zM6.5 10.5a4 4 0 1 0 0-5 4 4 0 0 0 0 5z" />
                        <path d="M8.5 5.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0" />
                    </svg> Guardar cambios
                </button>
            </div>
        </div>
    </div>
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
    $(document).ready(function () {
        $('#BuscarPersonaBtn').click(function () {
            var identificador = $('#Identificador').val();
            var url = '@Url.Action("BuscarPersonaPorIdentificador")';

            if (identificador) {
                // Mostrar el spinner y ocultar el botón de búsqueda
                $('#SpinnerButton').removeClass('d-none');
                $('#BuscarPersonaBtn').addClass('d-none');

                $.ajax({
                    url: url,
                    type: 'GET',
                    data: { identificador: identificador },
                    success: function (response) {
                        // Ocultar el spinner y mostrar el botón de búsqueda cuando la búsqueda se complete
                        $('#SpinnerButton').addClass('d-none');
                        $('#BuscarPersonaBtn').removeClass('d-none');

                        if (response.success) {
                            // Mostrar mensaje sobre deudas o la falta de ellas
                            if (response.deudas && response.deudas.ListComp.length > 0) {
                                var deudasInfo = `
                                    <strong>Información de Deudas:</strong><br>
                                    <strong>Componentes:</strong>
                                `;
                                var totalValor = 0;
                                response.deudas.ListComp.forEach(function (comp) {
                                    totalValor += comp.Valor;
                                    deudasInfo += `
                                        <div style="margin-bottom: 10px;">
                                            <strong>Rubro:</strong> ${comp.NombreMiembro}<br>
                                            <strong>Valor:</strong> $${comp.Valor.toFixed(2)}<br>
                                            <hr style="border: 1px solid #ccc;">
                                        </div>
                                    `;
                                });
                                deudasInfo += `
                                    <div style="margin-top: 5px;">
                                        <hr style="border: 1px solid #ccc;">
                                        <strong>Total (USD):</strong> $${totalValor.toFixed(2)}<br>
                                        <hr style="border: 1px solid #ccc;">
                                    </div>
                                `;
                                Swal.fire({
                                    title: 'El usuario posee valores pendientes.',
                                    html: deudasInfo,
                                    icon: 'info',
                                    confirmButtonText: 'Aceptar'
                                });
                            } else {
                                Swal.fire({
                                    title: 'Sin Deudas',
                                    text: "No se encontraron deudas para esta persona.",
                                    icon: 'info',
                                    confirmButtonText: 'Aceptar'
                                });
                            }
                        } else {
                            Swal.fire({
                                title: 'Sin deuda',
                                text: response.message,
                                icon: 'Info',
                                confirmButtonText: 'Aceptar'
                            });
                        }
                    },
                    error: function () {
                        // Ocultar el spinner y mostrar el botón de búsqueda en caso de error
                        $('#SpinnerButton').addClass('d-none');
                        $('#BuscarPersonaBtn').removeClass('d-none');

                        Swal.fire({
                            title: 'Error',
                            text: "Ocurrió un error al buscar la persona.",
                            icon: 'error',
                            confirmButtonText: 'Aceptar'
                        });
                    }
                });
            } else {
                Swal.fire({
                    title: 'Campo Requerido',
                    text: "Por favor, ingrese un identificador.",
                    icon: 'warning',
                    confirmButtonText: 'Aceptar'
                });
            }
        });
    });
    </script>
}
